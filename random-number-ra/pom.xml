<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.aviasales.jca</groupId>
    <artifactId>random-number-ra</artifactId>
    <version>1.0.0</version>
    <!-- !!! ИЗМЕНЕНИЕ: Упаковка теперь JAR !!! -->
    <packaging>jar</packaging>
    <name>Random Number Library (was RA)</name> <!-- Имя изменено для ясности -->

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jakarta.jakartaee-api.version>10.0.0</jakarta.jakartaee-api.version>
        <lombok.version>1.18.34</lombok.version>
    </properties>

    <dependencies>
        <!-- Оставляем зависимости Jakarta EE, так как классы все еще используют эти API -->
        <!-- Можно поменять scope на compile, если WAR будет их использовать напрямую, -->
        <!-- но оставим provided, предполагая, что WildFly их предоставит -->
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakarta.jakartaee-api.version}</version>
            <scope>provided</scope> <!-- Оставляем provided, т.к. код JCA все еще там -->
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Оставляем только компилятор -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
